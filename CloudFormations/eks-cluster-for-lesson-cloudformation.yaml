AWSTemplateFormatVersion: '2010-09-09'
Description: EKS Cluster for Lesson

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - 
        Label:
          default: Required parameters
        Parameters:
          - ProjectName
          - VpcId
          - EKSClusterSubnetIds
          - EKSWorkerSubnetIds

Parameters:
  ProjectName:
    Type: String
    Default: ""

  VpcId:
    Type: String
    Default: ""

  EKSClusterSubnetIds:
    Type: CommaDelimitedList
    Default: ""

  EKSWorkerSubnetIds:
    Type: CommaDelimitedList
    Default: ""


Resources:
  # EKS Cluster
  EKSClusterRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${ProjectName}-EKSClusterRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'eks.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  EKSClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${ProjectName}-eks-cluster-security-group
      GroupDescription: SecurityGroup for EKS Cluster
      VpcId: !Ref VpcId
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
        - CidrIpv6: ::/0
          IpProtocol: "-1"
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"
        - CidrIpv6: ::/0
          IpProtocol: "-1"
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-eks-cluster-security-group


  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties:
      Name: !Sub ${ProjectName}-eks-cluster
      Version: "1.22"
      RoleArn:
        Fn::GetAtt:
          - EKSClusterRole
          - Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref EKSClusterSecurityGroup
        SubnetIds:
          !Ref EKSClusterSubnetIds
        EndpointPublicAccess: true
        EndpointPrivateAccess: true
      Logging:
        ClusterLogging:
          EnabledTypes:
            - Type: api
            - Type: audit
      Tags:
        - Key: "Name"
          Value: !Sub ${ProjectName}-eks-cluster

  # NodeGroup

  EKSWorkerRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${ProjectName}-EKSWorkerRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy

  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      AmiType: BOTTLEROCKET_x86_64
      ClusterName: !Sub ${ProjectName}-eks-cluster
      DiskSize: 20
      InstanceTypes: 
        - t3.medium
      NodeRole:
        Fn::GetAtt:
          - EKSWorkerRole
          - Arn
      ScalingConfig:
        MinSize: 1
        DesiredSize: 1
        MaxSize: 1
      Subnets:
        !Ref EKSWorkerSubnetIds
